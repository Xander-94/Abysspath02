// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

GeneralInfo _$GeneralInfoFromJson(Map<String, dynamic> json) => GeneralInfo(
      background: json['background'] as String,
      goals: json['goals'] as String,
      preferences: json['preferences'] as Map<String, dynamic>,
    );

Map<String, dynamic> _$GeneralInfoToJson(GeneralInfo instance) =>
    <String, dynamic>{
      'background': instance.background,
      'goals': instance.goals,
      'preferences': instance.preferences,
    };

MultipleChoiceData _$MultipleChoiceDataFromJson(Map<String, dynamic> json) =>
    MultipleChoiceData(
      learningStyle: json['learning_style'] as Map<String, dynamic>,
      careerInterests: json['career_interests'] as Map<String, dynamic>,
      skillAssessment: json['skill_assessment'] as Map<String, dynamic>,
    );

Map<String, dynamic> _$MultipleChoiceDataToJson(MultipleChoiceData instance) =>
    <String, dynamic>{
      'learning_style': instance.learningStyle,
      'career_interests': instance.careerInterests,
      'skill_assessment': instance.skillAssessment,
    };

_$SurveyDataImpl _$$SurveyDataImplFromJson(Map<String, dynamic> json) =>
    _$SurveyDataImpl(
      skills: json['skills'] as Map<String, dynamic>,
      weaknesses: (json['weaknesses'] as List<dynamic>)
          .map((e) => e as String)
          .toList(),
      interests: (json['interests'] as Map<String, dynamic>).map(
        (k, e) => MapEntry(k, (e as num).toDouble()),
      ),
      learningPatterns: json['learningPatterns'] as Map<String, dynamic>,
      timeConstraints: json['timeConstraints'] as Map<String, dynamic>,
      completedAt: json['completed_at'] == null
          ? null
          : DateTime.parse(json['completed_at'] as String),
    );

Map<String, dynamic> _$$SurveyDataImplToJson(_$SurveyDataImpl instance) =>
    <String, dynamic>{
      'skills': instance.skills,
      'weaknesses': instance.weaknesses,
      'interests': instance.interests,
      'learningPatterns': instance.learningPatterns,
      'timeConstraints': instance.timeConstraints,
      'completed_at': instance.completedAt?.toIso8601String(),
    };
